@model KutuphaneMvc1.Models.BildirimVs
@{
    ViewBag.Title = "BASK";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Telefon Ekranı Gösterimi</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link href="~/Content/mesajlar.css" rel="stylesheet" />
    <style>
        .custom-header {
            display: flex;
            align-items: center;
            background-color: #4caf50;
            padding: 10px;
            border-radius: 12px 12px 0 0;
            justify-content: center;
        }

        .user-header {
            display: flex;
            align-items: center;
            background-color: #4caf50;
            padding: 10px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

        .header-title {
            color: #fff;
            font-size: 22px;
            font-weight: bold;
        }

        .back-button {
            margin-right: 10px;
            background: none;
            border: none;
            color: #fff;
            font-size: 20px;
            cursor: pointer;
        }

        .chat-user-avatar img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid #fff;
        }

        .chat-user-info-header {
            display: flex;
            align-items: center;
        }

        .chat-user-name-header {
            color: #fff;
            font-size: 18px;
            font-weight: bold;
            margin-left: 10px;
        }

        .action-bar {
            background-color: #4caf50;
            padding: 10px 0;
            display: flex;
            justify-content: center;
            margin-bottom: 10px;
        }

            .action-bar .phone-button {
                margin: 0 8px;
            }

        .message-input-container {
            background-color: #f5f5f5;
            padding: 10px;
            display: flex;
            align-items: center;
            border-top: 1px solid #ddd;
        }

        .message-textarea {
            flex: 1;
            border: 1px solid #ddd;
            border-radius: 20px;
            padding: 10px 15px;
            margin-right: 10px;
            resize: none;
            height: 40px;
            max-height: 100px;
            outline: none;
            font-family: inherit;
        }

        .send-button {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #4caf50;
            color: white;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .messages-container {
            padding: 15px;
            overflow-y: auto;
            height: calc(100% - 220px);
            display: flex;
            flex-direction: column;
        }

        .phone-footer {
            background-color: #f5f5f5;
            padding: 10px;
            display: flex;
            justify-content: space-around;
            border-top: 1px solid #ddd;
            border-radius: 0 0 12px 12px;
        }

        /* Mesaj baloncukları için stiller */
        .message {
            max-width: 80%;
            margin-bottom: 10px;
            padding: 10px 15px;
            border-radius: 18px;
            position: relative;
            word-wrap: break-word;
        }

        .message-time {
            font-size: 11px;
            color: #999;
            text-align: right;
            margin-top: 2px;
        }

        .message-outgoing {
            align-self: flex-end;
            background-color: #a084ee;
            border-top-right-radius: 5px;
        }

        .message-incoming {
            align-self: flex-start;
            background-color: #f1f1f1;
            border-top-left-radius: 5px;
        }

        .message-wrapper {
            display: flex;
            flex-direction: column;
            margin-bottom: 5px;
        }

        .loading-dots {
            display: inline-block;
            width: 40px;
            text-align: left;
        }

            .loading-dots span {
                display: inline-block;
                width: 8px;
                height: 8px;
                margin-right: 2px;
                background: #bbb;
                border-radius: 50%;
                animation: loading-bounce 1.4s infinite both;
            }

                .loading-dots span:nth-child(2) {
                    animation-delay: 0.2s;
                }

                .loading-dots span:nth-child(3) {
                    animation-delay: 0.4s;
                }

        @@keyframes loading-bounce {
            0%, 80%, 100% {
                transform: scale(0);
            }

            40% {
                transform: scale(1);
            }
        }
    </style>
</head>
<body>
    <div class="phone-container">
        <div class="phone-screen">
            <div id="phoneHeader" class="phone-header">BASK</div>
            <div id="phoneContent" class="phone-content">
                <div class="message">Merhaba! Benim adım BASK kütüphane sisteminin yerleşik Yapay Zekasıyım. Size nasıl yardımcı olabilirim?</div>
            </div>
            <div id="quickBubbles" class="quick-bubbles-bask">
                <div class="quick-bubble" data-msg="Rastgele bir kitap öner">Rastgele bir kitap öner.</div>
                <div class="quick-bubble" data-msg="Benim için bir kitap öner.">Benim için bir kitap öner.</div>
            </div>
            <div id="robotInputArea" class="robot-input-area">
                <form id="robotForm" method="post" action="@Url.Action("YapayZekayaGonder", "Bildirimlervs")" style="display: flex; width: 100%;">
                    @Html.AntiForgeryToken()
                    <textarea id="robotMessage" name="prompt" rows="1" placeholder="Mesajınızı yazın..." style="flex:1;"></textarea>
                    <button type="submit" id="btnSendRobot">Gönder</button>
                </form>
            </div>
            <div class="phone-footer">
                <button class="phone-button" id="btnRobot" style="background: #a084ee; color: #fff;" title="Robot Mesajı">
                    <span class="fa fa-robot"></span>
                </button>
                <button class="phone-button" id="btnComment" style="background: #4caf50; color: #fff;" title="Kişiler Arası Mesaj">
                    <span class="fa fa-comment-dots"></span>
                </button>
                <button class="phone-button" id="btnBell" style="background: #ff9800; color: #fff;" title="Bildirim Mesajı">
                    <span class="fa fa-bell"></span>
                </button>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/js/all.min.js" crossorigin="anonymous"></script>
    <script>
const otherViews = {
    comment: '@Url.Action("Messages", "Bildirimlervs")',
    bell: '@Url.Action("Notifications", "Bildirimlervs")'
};

// Loading dots fonksiyonu (sana hata veren kısım muhtemelen burada bir yazım hatasıydı)
function createLoadingDots() {
    const loading = document.createElement('div');
    loading.className = 'message message-incoming';
    loading.id = 'loadingDotsMessage';
    loading.innerHTML = `<span class="loading-dots">
        <span></span><span></span><span></span>
    </span>`;
    return loading;
}

function processRobotMessageFormData(message) {
    const content = document.getElementById('phoneContent');
    // Kullanıcı mesajını ekle
    const userMessage = document.createElement('div');
    userMessage.className = 'message message-outgoing';
    userMessage.textContent = message;
    content.appendChild(userMessage);

    // Loading dots ekle
    const loading = createLoadingDots();
    content.appendChild(loading);
    content.scrollTop = content.scrollHeight;

    // Formu ve FormData'yı hazırla
    const form = document.getElementById('robotForm');
    const textarea = document.getElementById('robotMessage');
    textarea.value = message; // FormData'da doğru mesaj olsun diye
    const formData = new FormData(form);

    fetch(form.action, {
        method: 'POST',
        body: formData
    })
    .then(response => {
        if (!response.ok) throw new Error('Network response was not ok');
        return response.json();
    })
    .then(data => {
        // Loading dots kaldır
        const loadingElem = document.getElementById('loadingDotsMessage');
        if (loadingElem) loadingElem.remove();

        // Bot cevabını ekle
        const botMessage = document.createElement('div');
        botMessage.className = 'message message-incoming';
        botMessage.textContent = data.reply || 'Bir hata oluştu.';
        content.appendChild(botMessage);
        content.scrollTop = content.scrollHeight;
    })
    .catch((error) => {
        const loadingElem = document.getElementById('loadingDotsMessage');
        if (loadingElem) loadingElem.remove();

        const botMessage = document.createElement('div');
        botMessage.className = 'message message-incoming';
        botMessage.textContent = 'Bir hata oluştu.';
        content.appendChild(botMessage);
        content.scrollTop = content.scrollHeight;
        console.error('Fetch error:', error);
    });
}

document.addEventListener('DOMContentLoaded', function () {
    // Form submit ile gönderim
    document.getElementById('robotForm').addEventListener('submit', function (e) {
        e.preventDefault();
        const messageInput = document.getElementById('robotMessage');
        const message = messageInput.value.trim();
        if (!message) return;

        processRobotMessageFormData(message);
        messageInput.value = ''; // Mesaj gönderilince textarea temizlensin
    });

    // Quick bubbles
    document.querySelectorAll('#quickBubbles .quick-bubble').forEach(bubble => {
        bubble.addEventListener('click', function () {
            const message = this.getAttribute('data-msg');
            if (message) {
                processRobotMessageFormData(message);
                document.getElementById('robotMessage').value = '';
            }
        });
    });

    // Robot, Kişiler, Bildirim yönlendirmeleri
    document.getElementById('btnRobot').addEventListener('click', function () {
        document.getElementById('phoneContent').innerHTML = '<div class="message">Merhaba! Benim adım BASK kütüphane sisteminin yerleşik Yapay Zekasıyım. Size nasıl yardımcı olabilirim?</div>';
    });
    document.getElementById('btnComment').addEventListener('click', function () {
        window.location.href = otherViews.comment;
    });
    document.getElementById('btnBell').addEventListener('click', function () {
        window.location.href = otherViews.bell;
    });

    // Enter ile gönderme
    document.getElementById('robotMessage').addEventListener('keypress', function (e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            e.preventDefault();
            document.getElementById('btnSendRobot').click();
        }
    });
});
    </script>
</body>
</html>
